---

- hosts: all
  gather_facts: false
  tasks:
    - name: create host var folders
      delegate_to: localhost
      file:
        path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
        recurse: true
        state: directory
        mode: 0744


- hosts: bookstack, emqx, frigate, gitea, jellyseerr, nzbget, paperless
  gather_facts: false
  tasks:
    - name: create host files folders
      delegate_to: localhost
      file:
        path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/files"
        recurse: true
        state: directory
        mode: 0744

    - name: Add server files templates
      delegate_to: localhost
      copy:
        src: "{{ inventory_dir }}/../global_files/host_conf_templates/{{ item }}/"
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/files/"
        force: false
        mode: 0744
      loop:
        - "{{ 'bookstack' if 'bookstack' in group_names }}"
        - "{{ 'emqx' if 'emqx' in group_names }}"
        - "{{ 'frigate' if 'frigate' in group_names }}"
        - "{{ 'gitea' if 'gitea' in group_names }}"
        - "{{ 'grafana' if 'grafana' in group_names }}"
        - "{{ 'jellyseerr' if 'jellyseerr' in group_names }}"
        - "{{ 'nzbget' if 'nzbget' in group_names }}"
        - "{{ 'paperless-ngx' if 'paperless' in group_names }}"
      when: item|length > 0


- hosts: frigate, mailcow, nzbget, paperless
  gather_facts: false
  tasks:
    - name: Add server variable templates
      delegate_to: localhost
      copy:
        src: "{{ inventory_dir }}/../global_files/host_vars_templates/{{ item }}"
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/{{ item }}"
        force: false
        mode: 0744
      loop:
        - "{{ 'frigate.yml' if 'frigate' in group_names }}"
        - "{{ 'mailcow.yml' if 'mailcow' in group_names }}"
        - "{{ 'nzbget.yml' if 'nzbget' in group_names }}"
        - "{{ 'paperless-ngx.yml' if 'paperless' in group_names }}"
      when: item|length > 0


- hosts: bookstack, frigate, nzbget, paperless
  gather_facts: false
  vars:
    vault_secret: "{{ lookup('password', '../.vault_key') }}"
  tasks:
    - name: Add server .credentials templates
      delegate_to: localhost
      copy:
        content: >-
          {{ lookup('ansible.builtin.template',
           inventory_dir + '/../global_files/host_secret_templates/' + item )
           | vault(vault_secret) }}
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml"
        force: false
        mode: 0744
        decrypt: false
      loop:
        - "{{ 'bookstack.credentials.yml.j2' if 'bookstack' in group_names }}"
        - "{{ 'frigate.credentials.yml.j2' if 'frigate' in group_names }}"
        - "{{ 'nzbget.credentials.yml.j2' if 'nzbget' in group_names }}"
        - "{{ 'paperless-ngx.credentials.yml.j2' if 'paperless' in group_names }}"
      when: item|length > 0


- hosts: gitea
  gather_facts: false
  vars:
    vault_secret: "{{ lookup('password', '../.vault_key') }}"
  tasks:

    - name: Add server .credentials templates for gitea
      delegate_to: localhost
      copy:
        content: >-
          {{ lookup('template', inventory_dir +
           '/../global_files/host_secret_templates/gitea.credentials.yml.j2' ) }}
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml"
        force: false
        mode: 0744
      register: file_added

    - name: workaround for lfs_jwt_secret
      when: file_added.changed
      block:
        - name: Generate the lfs_jwt_secret
          delegate_to: localhost
          # yamllint disable-line rule:line-length
          shell: set -o pipefail && dd if=/dev/urandom bs=1 count=32 status=none | base64 | tr '/+' '_-' | tr -d '='
          args:
            executable: /usr/bin/bash
          register: jwt_secret
          changed_when: false

        - name: Add the jwt_secret to the file
          delegate_to: localhost
          lineinfile:
            path: >-
              {{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml
            regexp: "^gitea_lfs_jwt_secret:"
            line: "gitea_lfs_jwt_secret: {{ jwt_secret.stdout }}"
            state: present

        - name: Encrypt gitea .credentials file
          delegate_to: localhost
          copy:
            content: >-
              {{ lookup('ansible.builtin.file',
               inventory_dir + '/host_vars/' + inventory_hostname + '/.credentials.yml')
               | vault(vault_secret) }}"
            dest: >-
              {{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml
            mode: 0744
            decrypt: false

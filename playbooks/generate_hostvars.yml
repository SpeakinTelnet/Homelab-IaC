---

- name: Create host host_vars folder
  hosts: all
  gather_facts: false
  tasks:
    - name: Create host var folders
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
        recurse: true
        state: directory
        mode: 0744


- name: Add host configuration files
  hosts: bookstack,
         emqx,
         frigate,
         geth,
         gitea,
         grafana,
         jellyseerr,
         mattermost,
         nzbget,
         paperless,
         polygon_bor,
         polygon_heimdall,
         samba_share,
         unattended_upgrades,
         ftp_server,
         homepage,
         ohmyzsh,
         avalanchego,
         lodestar,
         nethermind
  gather_facts: false
  tasks:
    - name: Create host files folders
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/files"
        recurse: true
        state: directory
        mode: 0744

    - name: Add server files templates
      delegate_to: localhost
      ansible.builtin.copy:
        src: "{{ inventory_dir }}/../global_files/host_conf_templates/{{ item }}/"
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/files/"
        force: false
        mode: 0744
      loop:
        - "{{ 'avalanchego' if 'avalanchego' in group_names }}"
        - "{{ 'bookstack' if 'bookstack' in group_names }}"
        - "{{ 'emqx' if 'emqx' in group_names }}"
        - "{{ 'frigate' if 'frigate' in group_names }}"
        - "{{ 'ftp_server' if 'ftp_server' in group_names }}"
        - "{{ 'geth' if 'geth' in group_names }}"
        - "{{ 'gitea' if 'gitea' in group_names }}"
        - "{{ 'grafana' if 'grafana' in group_names }}"
        - "{{ 'homepage' if 'homepage' in group_names }}"
        - "{{ 'jellyseerr' if 'jellyseerr' in group_names }}"
        - "{{ 'lodestar' if 'lodestar' in group_names }}"
        - "{{ 'mattermost' if 'mattermost' in group_names }}"
        - "{{ 'nethermind' if 'nethermind' in group_names }}"
        - "{{ 'nzbget' if 'nzbget' in group_names }}"
        - "{{ 'ohmyzsh' if 'ohmyzsh' in group_names }}"
        - "{{ 'paperless-ngx' if 'paperless' in group_names }}"
        - "{{ 'polygon_bor' if 'polygon_bor' in group_names }}"
        - "{{ 'polygon_heimdall' if 'polygon_heimdall' in group_names }}"
        - "{{ 'samba_share' if 'samba_share' in group_names }}"
        - "{{ 'unattended_upgrades' if 'unattended_upgrades' in group_names }}"
      when: item | length > 0


- name: Add host specific host_vars file
  hosts: frigate,
         geth,
         mailcow,
         nfs_share,
         nzbget,
         paperless,
         samba_share,
         ftp_server,
         lxc,
         ohmyzsh,
         polygon_bor,
         polygon_heimdall,
         lodestar,
         nethermind
  gather_facts: false
  tasks:
    - name: Add server variable templates
      delegate_to: localhost
      ansible.builtin.copy:
        src: "{{ inventory_dir }}/../global_files/host_vars_templates/{{ item }}"
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/{{ item }}"
        force: false
        mode: 0744
      loop:
        - "{{ 'frigate.yml' if 'frigate' in group_names }}"
        - "{{ 'ftp_server.yml' if 'ftp_server' in group_names }}"
        - "{{ 'geth.yml' if 'geth' in group_names }}"
        - "{{ 'lxc.yml' if 'lxc' in group_names }}"
        - "{{ 'lodestar.yml' if 'lodestar' in group_names }}"
        - "{{ 'mailcow.yml' if 'mailcow' in group_names }}"
        - "{{ 'nfs_share.yml' if 'nfs_share' in group_names }}"
        - "{{ 'nethermind.yml' if 'nethermind' in group_names }}"
        - "{{ 'nzbget.yml' if 'nzbget' in group_names }}"
        - "{{ 'ohmyzsh.yml' if 'ohmyzsh' in group_names }}"
        - "{{ 'paperless-ngx.yml' if 'paperless' in group_names }}"
        - "{{ 'polygon_bor.yml' if 'polygon_bor' in group_names }}"
        - "{{ 'polygon_heimdall.yml' if 'polygon_heimdall' in group_names }}"
        - "{{ 'samba_share.yml' if 'samba_share' in group_names }}"
      when: item | length > 0


- name: Add host specific .credentials file
  hosts: bookstack,
         frigate,
         geth,
         nzbget,
         mattermost,
         paperless,
         samba_share,
         ftp_server,
         homepage,
         lodestar,
         nethermind
  gather_facts: false
  vars:
    vault_secret: "{{ lookup('password', '../.vault_key') }}"
  tasks:
    - name: Add server .credentials templates  # noqa: args[module]
      delegate_to: localhost
      ansible.builtin.copy:
        content: >-
          {{ lookup('ansible.builtin.template',
           inventory_dir + '/../global_files/host_secret_templates/' + item )
           | vault(vault_secret) }}
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml"
        force: false
        mode: 0744
        decrypt: false
      loop:
        - "{{ 'bookstack.credentials.yml.j2' if 'bookstack' in group_names }}"
        - "{{ 'frigate.credentials.yml.j2' if 'frigate' in group_names }}"
        - "{{ 'ftp_server.credentials.yml.j2' if 'ftp_server' in group_names }}"
        - "{{ 'geth.credentials.yml.j2' if 'geth' in group_names }}"
        - "{{ 'homepage.credentials.yml.j2' if 'homepage' in group_names }}"
        - "{{ 'lodestar.credentials.yml.j2' if 'lodestar' in group_names }}"
        - "{{ 'mattermost.credentials.yml.j2' if 'mattermost' in group_names }}"
        - "{{ 'nethermind.credentials.yml.j2' if 'nethermind' in group_names }}"
        - "{{ 'nzbget.credentials.yml.j2' if 'nzbget' in group_names }}"
        - "{{ 'paperless-ngx.credentials.yml.j2' if 'paperless' in group_names }}"
        - "{{ 'samba_share.credentials.yml.j2' if 'samba_share' in group_names }}"
      when: item | length > 0


- name: Generate the .credentials file for Gitea
  hosts: gitea
  gather_facts: false
  vars:
    vault_secret: "{{ lookup('password', '../.vault_key') }}"
  tasks:
    - name: Add server .credentials templates for gitea
      delegate_to: localhost
      ansible.builtin.copy:
        content: >-
          {{ lookup('template', inventory_dir +
           '/../global_files/host_secret_templates/gitea.credentials.yml.j2' ) }}
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml"
        force: false
        mode: 0744
      notify: lfs_jwt_secret_generation

  handlers:
    - name: Generate the lfs_jwt_secret
      delegate_to: localhost
      # yamllint disable-line rule:line-length
      ansible.builtin.shell: set -o pipefail && dd if=/dev/urandom bs=1 count=32 status=none | base64 | tr '/+' '_-' | tr -d '='
      args:
        executable: /usr/bin/bash
      register: jwt_secret
      changed_when: false
      listen: lfs_jwt_secret_generation

    - name: Add the jwt_secret to the file
      delegate_to: localhost
      ansible.builtin.lineinfile:
        path: >-
          {{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml
        regexp: "^gitea_lfs_jwt_secret:"
        line: "gitea_lfs_jwt_secret: {{ jwt_secret.stdout }}"
        state: present
      listen: lfs_jwt_secret_generation

    - name: Encrypt gitea .credentials file  # noqa: args[module]
      delegate_to: localhost
      ansible.builtin.copy:
        content: >-
          {{ lookup('ansible.builtin.file',
            inventory_dir + '/host_vars/' + inventory_hostname + '/.credentials.yml')
            | vault(vault_secret) }}
        dest: >-
          {{ inventory_dir }}/host_vars/{{ inventory_hostname }}/.credentials.yml
        mode: 0744
        decrypt: false
      listen: lfs_jwt_secret_generation

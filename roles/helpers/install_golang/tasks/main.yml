---

- name: Try to get installed golang version
  ansible.builtin.command: /usr/local/go/bin/go version
  register: result
  changed_when: false
  ignore_errors: true

- name: Get latest golang version
  ansible.builtin.uri:
    url: https://go.dev/VERSION?m=text
    return_content: true
  register: latest_golang_version
  when: forced_golang_version is undefined

- name: Set Desired golang version
  ansible.builtin.set_fact:
    wanted_golang_version: >-
      {{
        forced_golang_version
        if (forced_golang_version is defined)
        else latest_golang_version.content
      }}

- name: Set installed golang version
  ansible.builtin.set_fact:
    installed_golang_version: "{{ result.stdout.split(' ')[2] }}"
  when: not result.failed

- name: Remove previous version of golang
  become: true
  ansible.builtin.file:
    path: /usr/local/go
    state: absent
  when: not result.failed and
        wanted_golang_version != installed_golang_version

- name: Download golang binary version {{ wanted_golang_version }}
  become: true
  ansible.builtin.unarchive:
    # yamllint disable-line rule:line-length
    src: "https://go.dev/dl/{{ wanted_golang_version }}.linux-amd64.tar.gz"
    dest: /usr/local
    owner: root
    group: root
    remote_src: true
  when: (
          not result.failed and
          wanted_golang_version != installed_golang_version
        ) or
        result.failed

- name: Add golang to global path
  become: true
  ansible.builtin.lineinfile:
    path: /etc/profile
    line: "PATH=$PATH:/usr/local/go/bin"

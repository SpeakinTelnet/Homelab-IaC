---

- name: Install Bor dependencies
  become: true
  ansible.builtin.apt:
    name:
      - python3-pip
      - git
    state: latest
    update_cache: true
    cache_valid_time: 1800

- name: Install python package dependencies
  become: true
  ansible.builtin.pip:
    name:
      - github3.py

- name: Install golang for bor
  ansible.builtin.include_role:
    name: helpers/install_golang

- name: Create user/group cryptobro
  ansible.builtin.include_role:
    name: helpers/create_user_group
  vars:
    user_to_create: cryptobro
    user_to_create_uid: 1337
    group_to_create: cryptobro
    group_to_create_gid: 1337

- name: Create bor folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    owner: cryptobro
    group: cryptobro
    mode: 0755
    state: directory
  loop:
    - /var/opt/bor
    - /var/opt/bor/chain-data

- name: Clone and set Bor repo permission
  block:
    - name: Clone bor git repo
      become: true
      ansible.builtin.git:
        repo: "{{ bor_custom_git_url }}"
        version: "{{ bor_custom_git_branch | default('master') }}"
        dest: /opt/bor

    - name: Build Bor
      become: true
      community.general.make:
        chdir: /opt/bor
        target: bor
      environment:
        PATH: /sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin:/usr/local/go/bin

    - name: Set Bor folder permission
      become: true
      ansible.builtin.file:
        dest: /opt/bor
        owner: cryptobro
        group: cryptobro
        recurse: true

- name: Copy the Bor config file over
  become: true
  ansible.builtin.copy:
    src: >-
      {{
        inventory_dir + '/host_vars/' + inventory_hostname + '/files/config.toml'
      }}
    dest: "/var/opt/bor/config.toml"
    owner: cryptobro
    group: cryptobro
    mode: 0644

- name: Copy the bor service file over
  become: true
  ansible.builtin.copy:
    src: bor.service
    dest: /etc/systemd/system/bor.service
    owner: root
    group: root
    mode: 0644

- name: Change /var/lib to /var/opt for git installed Bor
  become: true
  ansible.builtin.replace:
    path: /etc/systemd/system/bor.service
    replace: "{{ item.replace }}"
    regexp: "{{ item.regexp }}"
  loop:
    - {
      regexp: '-config "/var/lib/bor/config.toml"',
      replace: '-config "/var/opt/bor/config.toml"'
    }
    - {
      regexp: "/usr/bin/bor",
      replace: "/opt/bor/build/bin/bor"
    }

- name: Start and enable Bor
  become: true
  ansible.builtin.systemd:
    name: bor
    enabled: true
    state: started

- name: Stamp as properly deployed
  ansible.builtin.include_role:
    name: helpers/tag_host
  vars:
    stamp: "bor_deployed"
